---

neofs_ir__version: '0.36.0'
neofs_ir__bin_url: 'https://github.com/nspcc-dev/neofs-node/releases/download/v{{ neofs_ir__version }}/neofs-ir-amd64'
neofs_ir__cli_bin_url: 'https://github.com/nspcc-dev/neofs-node/releases/download/v{{ neofs_ir__version }}/neofs-cli-amd64'

neofs_ir__docker_image: 'nspccdev/neofs-ir:{{ neofs_ir__version }}'
neofs_ir__use_docker: False

neofs_ir__locodedb_version: 'v0.2.1'
neofs_ir__locodedb_url: 'https://github.com/nspcc-dev/neofs-locode-db/releases/download/{{ neofs_ir__locodedb_version }}/locode_db'

# Flag to skip binaries download
neofs_ir__binaries_download: True

# Instance name to have multiple NeoFS nodes on the same host
neofs_ir__instance: ''

neofs_ir__user: 'neofs-ir{{ neofs_ir__instance }}'
neofs_ir__group: 'neofs-ir{{ neofs_ir__instance }}'

neofs_ir__conf_dir: '/etc/neofs/ir{{ neofs_ir__instance }}'
neofs_ir__config_path: '{{ neofs_ir__conf_dir }}/config.yml'
neofs_ir__bin_path: '/usr/bin/neofs-ir'
neofs_ir__cli_bin_path: '/usr/bin/neofs-cli'
neofs_ir__locodedb_path: '{{ neofs_ir__data_dir }}/locode.db'
neofs_ir__control_api_config_path: '{{ neofs_ir__conf_dir }}/control.yml'

# Directory for databases and processing results
neofs_ir__data_dir: '/var/lib/neofs/ir{{ neofs_ir__instance }}'

neofs_ir__wallet_struct: ''
neofs_ir__wallet_path: '{{ neofs_ir__conf_dir }}/wallet.json'
neofs_ir__wallet_address: ''
neofs_ir__wallet_password: ''

neofs_ir__control_enabled: False
neofs_ir__control_address: 'localhost'
neofs_ir__control_port: 8090
neofs_ir__control_allow: []
neofs_ir__control_group_allow: []
neofs_ir__control_host_allow: []

neofs_ir__prometheus_enabled: False
neofs_ir__prometheus_address: 'localhost'
neofs_ir__prometheus_port: 6662
neofs_ir__prometheus_allow: []
neofs_ir__prometheus_group_allow: []
neofs_ir__prometheus_host_allow: []

neofs_ir__pprof_enabled: False
neofs_ir__pprof_address: 'localhost'
neofs_ir__pprof_port: 6661
neofs_ir__pprof_allow: []
neofs_ir__pprof_group_allow: []
neofs_ir__pprof_host_allow: []

neofs_ir__blockchain_database_path: '{{ neofs_ir__data_dir }}/morph.bolt'
neofs_ir__blockchain_notary_disabled: False
neofs_ir__blockchain_time_per_block: '15s'
neofs_ir__blockchain_magic: '735783775'
neofs_ir__blockchain_seed_nodes: []
neofs_ir__blockchain_rpc_addresses: []
neofs_ir__blockchain_p2p_addresses: []

neofs_ir__validators:
      - '026fa34ec057d74c2fdf1a18e336d0bd597ea401a0b2ad57340d5c220d09f44086'
      - '039a9db2a30942b1843db673aeb0d4fd6433f74cec1d879de6343cb9fcf7628fa4'
      - '0366d255e7ce23ea6f7f1e4bedf5cbafe598705b47e6ec213ef13b2f0819e8ab33'
      - '023f9cb7bbe154d529d5c719fdc39feaa831a43ae03d2a4280575b60f52fa7bc52'
      - '039ba959e0ab6dc616df8b803692f1c30ba9071b76b05535eb994bf5bbc402ad5f'
      - '035a2a18cddafa25ad353dea5e6730a1b9fcb4b918c4a0303c4387bb9c3b816adf'
      - '031f4d9c66f2ec348832c48fd3a16dfaeb59e85f557ae1e07f6696d0375c64f97b'
neofs_ir__consensus_committee: '{{ neofs_ir__validators }}'

neofs_ir__mainnet_endpoints:
  - address: 'ws://localhost:20332/ws'

neofs_ir__morph_endpoints:
  - address: 'ws://localhost:40332/ws'

neofs_ir__external_sidechain: False
neofs_ir__sidechain_config:
    magic: '{{ neofs_ir__blockchain_magic }}'
    committee: '{{ neofs_ir__consensus_committee }}'
    storage:
      type: boltdb
      path: '{{ neofs_ir__blockchain_database_path }}'
    notary_disabled: '{{ neofs_ir__blockchain_notary_disabled }}'
    time_per_block: '{{ neofs_ir__blockchain_time_per_block }}'
    max_traceable_blocks: 2102400
    seed_nodes: '{{ neofs_ir__blockchain_seed_nodes }}'
    rpc:
      listen: '{{ neofs_ir__blockchain_rpc_addresses }}'
    p2p:
      dial_timeout: 3s
      proto_tick_interval: 2s
      listen: '{{ neofs_ir__blockchain_p2p_addresses }}'
      peers:
        min: 4
        max: 100
        attempts: 20
      ping:
        interval: 30s
        timeout: 90s


neofs_ir__raw_config:
  logger:
    level: info

  wallet:
    path: '{{ neofs_ir__wallet_path }}'
    address: '{{ neofs_ir__wallet_address }}'
    password: '{{ neofs_ir__wallet_password }}'

  morph:
    validators: '{{ neofs_ir__validators }}'

  mainnet:
    endpoint:
      client: '{{ neofs_ir__mainnet_endpoints }}'

  node:
    persistent_state:
      path: '{{ neofs_ir__data_dir }}/state'

  locode:
    db:
      path: '{{ neofs_ir__locodedb_path }}'

  fee:
    main_chain: 25000000
    side_chain: 500000000
    named_container_register: 2500000000
  timers:
    emit: 240
    stop_estimation:
      mul: 1
      div: 4
    collect_basic_income:
      mul: 1
      div: 2
    distribute_basic_income:
      mul: 3
      div: 4
  emit:
    storage:
      amount: 400000000
    gas:
      balance_threshold: 100000000000
  audit:
    pdp:
      max_sleep_interval: 500ms
  netmap_cleaner:
    enabled: true
    threshold: 3
  workers:
    netmap: 100
    balance: 100
    neofs: 100
    container: 100
    alphabet: 100


neofs_ir__default_config:
  - enabled: '{{ neofs_ir__external_sidechain }}'
    options:
      morph:
        endpoint:
          client: '{{ neofs_ir__morph_endpoints }}'

  - enabled: '{{ not neofs_ir__external_sidechain }}'
    options:
      morph:
        consensus: '{{ neofs_ir__sidechain_config }}'

  - enabled: '{{ neofs_ir__control_enabled }}'
    options:
      control:
        grpc:
          endpoint: '{{ neofs_ir__control_address }}:{{ neofs_ir__control_port }}'

  - enabled: '{{ neofs_ir__prometheus_enabled }}'
    options:
      prometheus:
        enabled: True
        address: '{{ neofs_ir__prometheus_address }}:{{ neofs_ir__prometheus_port }}'

  - enabled: '{{ neofs_ir__pprof_enabled }}'
    options:
      pprof:
        enabled: True
        address: '{{ neofs_ir__pprof_address }}:{{ neofs_ir__pprof_port }}'

neofs_ir__config: []
neofs_ir__group_config: []
neofs_ir__host_config: []

neofs_ir__combined_config: '{{
  neofs_ir__default_config +
  neofs_ir__config +
  neofs_ir__group_config +
  neofs_ir__host_config }}'


# Force debops.ferm run via role import
# May be useful when you need to have multiple instances with different
# firewall rules for each one.
neofs_ir__debops_ferm_import: False

# firewall configuration to be applied with debops.ferm role
neofs_ir__ferm__dependent_rules:
  - type: 'accept'
    name: 'neofs-ir{{ neofs_ir__instance }}_prometheus'
    dport: [ '{{ neofs_ir__prometheus_port }}' ]
    daddr: [ '{{ neofs_ir__prometheus_address }}' ]
    saddr: '{{ neofs_ir__prometheus_allow + neofs_ir__prometheus_group_allow + neofs_ir__prometheus_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neofs_ir__prometheus_enabled else 'absent' }}"

  - type: 'accept'
    name: 'neofs-ir{{ neofs_ir__instance }}_pprof'
    dport: [ '{{ neofs_ir__pprof_port }}' ]
    daddr: [ '{{ neofs_ir__pprof_address }}' ]
    saddr: '{{ neofs_ir__pprof_allow + neofs_ir__pprof_group_allow + neofs_ir__pprof_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neofs_ir__pprof_enabled else 'absent' }}"

  - type: 'accept'
    name: 'neofs-ir{{ neofs_ir__instance }}_control'
    dport: [ '{{ neofs_ir__control_port }}' ]
    daddr: [ '{{ neofs_ir__control_address }}' ]
    saddr: '{{ neofs_ir__control_allow + neofs_ir__control_group_allow + neofs_ir__control_host_allow }}'
    protocol: 'tcp'
    rule_state: "{{ 'present' if neofs_ir__control_enabled else 'absent' }}"
